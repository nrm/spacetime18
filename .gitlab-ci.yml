stages:
  - deploy
  - test

variables:
  GIT_SUBMODULE_STRATEGY: recursive

before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - echo "$SPACETIME18_DEPLOY_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - ssh-keyscan github.com >> ~/.ssh/known_hosts
  - ssh-keyscan 172.20.180.215 >> ~/.ssh/known_hosts

deploy:
  stage: deploy
  script:
    - git checkout master_in_progress
    - git pull origin master_in_progress
    - if ! git remote | grep github; then git remote add github git@github.com:nrm/spacetime18.git; fi
    - git push --force github master_in_progress
  when: manual
  only:
    - master_in_progress

test:
  stage: test
  script:
    - ssh deploy_user@172.20.180.215 'mkdir -p ~/project'
    - scp -r * deploy_user@172.20.180.215:~/project
    - ssh deploy_user@172.20.180.215 '
        cd ~/project && \
        python3 -m venv venv && \
        source venv/bin/activate && \
        pip install -r requirements.txt && \
        python test.py --layout /opt/spacetime/layouts/layout_2021-08-16.tif --crop /opt/1_20/crop_0_0_0000.tif && \
        cp result.csv ~/'
    - scp deploy_user@172.20.180.215:~/result.csv .
    - ssh deploy_user@172.20.180.215 'rm -rf ~/project ~/result.csv'
  artifacts:
    paths:
      - result.csv
    when: always
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /.*run_test.*/'
