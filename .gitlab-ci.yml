stages:
  - deploy
  - test
  - collect

variables:
  GIT_SUBMODULE_STRATEGY: recursive

deploy:
  stage: deploy
  script:
    - git checkout master_in_progress
    - git pull origin master_in_progress
    - if ! git remote | grep github; then git remote add github git@github.com:nrm/spacetime18.git; fi
    - git push --force github master_in_progress
  when: manual
  only:
    - master_in_progress

execute-job-1:
  stage: test
  script:
    - echo "Executing test 1..."
    - mkdir -p result_job1
    - bash ./run_test_L.1.sh $CI_COMMIT_SHORT_SHA /opt/spacetime/layouts/layout_2021-06-15.tif
    - mv result*.csv result_job1/
  artifacts:
    paths:
      - result_job1/
    expire_in: 1 week
  timeout: 4h
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /.*run_test.*/'

execute-job-2:
  stage: test
  script:
    - echo "Executing test 2..."
    - mkdir -p result_job2
    - bash ./run_test_L.2.sh $CI_COMMIT_SHORT_SHA /opt/spacetime/layouts/layout_2021-06-15.tif
    - mv result*.csv result_job2/
  artifacts:
    paths:
      - result_job2/
    expire_in: 1 week
  timeout: 4h
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /.*run_test.*/'

execute-job-3:
  stage: test
  script:
    - echo "Executing test 3..."
    - mkdir -p result_job3
    - bash ./run_test_L.1.sh $CI_COMMIT_SHORT_SHA /opt/spacetime/layouts/layout_2021-08-16.tif
    - mv result*.csv result_job3/
  artifacts:
    paths:
      - result_job3/
    expire_in: 1 week
  timeout: 4h
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /.*run_test.*/'

execute-job-4:
  stage: test
  script:
    - echo "Executing test 4..."
    - mkdir -p result_job4
    - bash ./run_test_L.2.sh $CI_COMMIT_SHORT_SHA /opt/spacetime/layouts/layout_2021-08-16.tif
    - mv result*.csv result_job4/
  artifacts:
    paths:
      - result_job4/
    expire_in: 1 week
  timeout: 4h
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /.*run_test.*/'

collect-results:
  stage: collect
  script:
    - mkdir -p combined_results
    - echo "Collecting results from job 1..."
    - cp result_job1/* combined_results/ || echo "No results from job 1"
    - echo "Collecting results from job 2..."
    - cp result_job2/* combined_results/ || echo "No results from job 2"
    - echo "Collecting results from job 3..."
    - cp result_job3/* combined_results/ || echo "No results from job 3"
    - echo "Collecting results from job 4..."
    - cp result_job4/* combined_results/ || echo "No results from job 4"
    - echo "Processing combined results..."
    - ls -R combined_results/
    # Здесь можно добавить дополнительные команды для обработки результатов
  artifacts:
    paths:
      - combined_results/
    expire_in: 1 week
  needs:
    - execute-job-1
    - execute-job-2
    - execute-job-3
    - execute-job-4