stages:
  - deploy
  - test
  - collect

variables:
  GIT_SUBMODULE_STRATEGY: recursive

before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - echo "$SPACETIME18_DEPLOY_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - ssh-keyscan github.com >> ~/.ssh/known_hosts
  - ssh-keyscan p01.forecast.lan >> ~/.ssh/known_hosts
  - ssh-keyscan p03.forecast.lan >> ~/.ssh/known_hosts

deploy:
  stage: deploy
  script:
    - git checkout master_in_progress
    - git pull origin master_in_progress
    - if ! git remote | grep github; then git remote add github git@github.com:nrm/spacetime18.git; fi
    - git push --force github master_in_progress
  when: manual
  only:
    - master_in_progress

execute-job-1:
  stage: test
  script:
    # - ssh deploy_user@p01.forecast.lan 'which chmod'
    - ssh deploy_user@p01.forecast.lan 'rm -rf ~/project ~/result*.csv'
    - ssh deploy_user@p01.forecast.lan 'mkdir -p ~/project'
    - scp -r * deploy_user@p01.forecast.lan:~/project
    - ssh deploy_user@p01.forecast.lan 'bash ~/project/run_test_p01.sh $CI_COMMIT_SHORT_SHA'
    - scp deploy_user@p01.forecast.lan:~/result*.csv .
    - ssh deploy_user@p01.forecast.lan 'rm -rf ~/project ~/result*.csv'
  artifacts:
    paths:
      - result_p01/
    expire_in: 3 week
    when: always
  timeout: 4h
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /.*run_test.*/'

execute-job-2:
  stage: test
  script:
    - ssh deploy_user@p02.forecast.lan 'rm -rf ~/project ~/result*.csv'
    - ssh deploy_user@p02.forecast.lan 'mkdir -p ~/project'
    - scp -r * deploy_user@p02.forecast.lan:~/project
    - ssh deploy_user@p02.forecast.lan 'bash ~/project/run_test_p01.sh $CI_COMMIT_SHORT_SHA'
    - scp deploy_user@p02.forecast.lan:~/result*.csv .
    - ssh deploy_user@p02.forecast.lan 'rm -rf ~/project ~/result*.csv'
  artifacts:
    paths:
      - result_p02/
    expire_in: 3 week
    when: always
  timeout: 4h
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /.*run_test.*/'

collect-results:
  stage: collect
  script:
    - mkdir -p combined_results
    - cp result_p01/* combined_results/
    - cp result_p02/* combined_results/
  artifacts:
    paths:
      - combined_results/
    expire_in: 1 week
